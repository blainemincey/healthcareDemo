import { CoreStitchAuth, CoreStitchUser, StitchAppClientInfo, StitchAuthRoutes, StitchCredential, StitchRequestClient, StitchUserFactory, Storage } from "mongodb-stitch-core-sdk";
import AuthProviderClientFactory from "../providers/internal/AuthProviderClientFactory";
import NamedAuthProviderClientFactory from "../providers/internal/NamedAuthProviderClientFactory";
import StitchAuth from "../StitchAuth";
import StitchAuthListener from "../StitchAuthListener";
import StitchUser from "../StitchUser";
export default class StitchAuthImpl extends CoreStitchAuth<StitchUser> implements StitchAuth {
    private readonly appInfo;
    private readonly listeners;
    constructor(requestClient: StitchRequestClient, authRoutes: StitchAuthRoutes, authStorage: Storage, appInfo: StitchAppClientInfo);
    protected readonly userFactory: StitchUserFactory<StitchUser>;
    getProviderClient<ClientT>(factory: AuthProviderClientFactory<ClientT> | NamedAuthProviderClientFactory<ClientT>, providerName?: string): ClientT;
    loginWithCredential(credential: StitchCredential): Promise<StitchUser>;
    linkWithCredential(user: CoreStitchUser, credential: StitchCredential): Promise<StitchUser>;
    logout(): Promise<void>;
    protected readonly deviceInfo: {};
    addAuthListener(listener: StitchAuthListener): void;
    removeAuthListener(listener: StitchAuthListener): void;
    onAuthEvent(listener?: StitchAuthListener): void;
}
